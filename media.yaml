version: "3.9"

x-env: &env
  environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}

x-deploy: &deploy
  deploy:
    placement:
      constraints:
        - node.hostname == truenas-ubuntu

x-deploy-nuc: &deploy-nuc
  deploy:
    placement:
      constraints:
        - node.hostname == nuc8-1
          
networks:
  default:
    name: smarthomeserver
    external: true

volumes:
  truenas-media:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=192.168.0.196"
      device: :/mnt/newton/media
  truenas-torrents:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=192.168.0.196"
      device: :/mnt/newton/media/qbit/torrents

services:
  overseerr:
    <<: *env
    image: linuxserver/overseerr:latest
    container_name: overseerr
    volumes:
      - ${DATADIR}/overseerr/config:/config
    restart: unless-stopped

  komga:
    image: index.docker.io/gotson/komga
    container_name: komga
    volumes:
      - ${DATADIR}/komga/config:/config
      - /etc/timezone:/etc/timezone
      - type: volume
        source: truenas-media
        target: /data
    user: "${PUID}:${PGID}"
    restart: unless-stopped

  radarr:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${SERVARRDIR}/radarr/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  prowlarr:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    volumes:
      - ${SERVARRDIR}/prowlarr/config:/config
    restart: unless-stopped

  sonarr:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ${SERVARRDIR}/sonarr/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  readarr:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/readarr:develop
    container_name: readarr
    volumes:
      - ${SERVARRDIR}/readarr/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  mylar3:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/mylar3:latest
    container_name: mylar3
    volumes:
      - ${SERVARRDIR}/mylar3/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  calibre:
    <<: *env
    image: linuxserver/calibre:latest
    container_name: calibre
    volumes:
      - ${DATADIR}/calibre/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  unpackerr:
    <<: *env
    image: golift/unpackerr
    container_name: unpackerr
    user: ${PUID}:${PGID}
    volumes:
      - ${DATADIR}/unpackerr/config:/etc/unpackerr/
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  tautulli:
    <<: *env
    image: linuxserver/tautulli:latest
    container_name: tautulli
    volumes:
      - ${DATADIR}/tautulli/config:/config
    restart: unless-stopped

  bazarr:
    <<: *env
    <<: *deploy-nuc
    image: linuxserver/bazarr:latest
    container_name: bazarr
    volumes:
      - ${SERVARRDIR}/bazarr/config:/config
      - type: volume
        source: truenas-media
        target: /data
    restart: unless-stopped

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    init: true
    user: ${PUID}:${PGID}
    volumes:
      - ${DATADIR}/recyclarr/config:/config
    environment:
      - TZ=America/Chicago
      - CRON_SCHEDULE=@hourly
      - RECYCLARR_CREATE_CONFIG=true

  flaresolverr:
    <<: *deploy
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Chicago
    restart: unless-stopped

  cross-seed:
    image: crossseed/cross-seed
    container_name: cross-seed
    user: ${PUID}:${PGID}
    volumes:
        - ${DATADIR}/cross-seed/config:/config
        - type: volume
          source: truenas-torrents
          target: /torrents
        - ${DATADIR}/cross-seed/cross-seeds:/cross-seeds
    command: daemon # this enables the daemon
    restart: unless-stopped

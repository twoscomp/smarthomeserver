version: "3.9"

networks:
  default:
    external:
      name: smarthomeserver

services:
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DATADIR}/heimdall:/config
    ports:
      - 9080:80
      - 9443:443

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    # - "443:443/tcp"
    # - "853:853/tcp"
    # - "784:784/udp"
    # - "3300:3000/tcp"
    # - "3380:80/tcp"
    volumes:
      - "${DATADIR}/adguard/workdir:/opt/adguardhome/work"
      - "${DATADIR}/adguard/confdir:/opt/adguardhome/conf"
    cap_add:
      - NET_ADMIN
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  adguard_exporter:
    image: ebrianne/adguard-exporter:latest
    container_name: adguard-exporter
    depends_on:
      - adguard
    restart: unless-stopped
    # ports:
    #  - "9617:9617"
    environment:
      - adguard_protocol=http
      - adguard_hostname=adguard
      - adguard_username=twoscomp
      - adguard_password=${AD_GUARD_PASSWORD}
      - adguard_port=80
      - server_port=9617
      - interval=30s
      - log_limit=10000
      - password_from_file=false

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true # deleting old unused images automatically
      # optional for notifications
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD}
      # alternative for notification via pushover
      #- WATCHTOWER_NOTIFICATIONS=shoutrrr
      #- WATCHTOWER_NOTIFICATION_URL=pushover://shoutrrr:${PO_TOKEN}@${PO_USERKEY}
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  loki:
    container_name: loki
    image: grafana/loki:2.3.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ${DATADIR}/loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ${DATADIR}/loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  duplicati:
    image: lscr.io/linuxserver/duplicati:2.0.6
    container_name: duplicati
    restart: unless-stopped
    environment:
      #- PUID=${PUID}
      #- PGID=${PGID}
      - PUID=0
      - PGID=0
      - TZ=${TZ}
      #- CLI_ARGS= #optional
    volumes:
      - ${DATADIR}/duplicati/config>:/config
      - ${DATADIR}:/source
    # ports:
    #   - 8200:8200
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ${DATADIR}/nginx-package-manager/data:/data
      - ${DATADIR}/nginx-package-manager/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s

  grafana:
    image: "grafana/grafana:latest"
    container_name: "grafana"
    restart: unless-stopped
    # user: "$PUID:$PGID"
    user: "0"
    # depends_on:
    #   influxdb:
    #     condition: service_healthy
    volumes:
      - "${DATADIR}/grafana/data:/var/lib/grafana"
      - "${DATADIR}/grafana/provisioning:/etc/grafana/provisioning"
    #ports:
    #  - 3000:3000
    # uncomment this if you wanta to allow anonymus acces to Grafana for embedding (e.g. in Home Assistant dashboards)
    environment:
    #  - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true

  homeassistant:
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/raspberrypi3-homeassistant
    volumes:
      - ${DATADIR}/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/serial/by-id/:/dev/serial/by-id/
    ports:
      - 8123:8123
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      # don't automatically update this container as it might break your setup
      - "com.centurylinklabs.watchtower.enable=false"
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "500m"

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    restart: unless-stopped
    user: ${PUID}:${PGID}
    #user: "0:0"
    #ports:
    #  - "9090:9090"
    volumes:
      - ${DATADIR}/prometheus/etc:/etc/prometheus
      - ${DATADIR}/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "10m"

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "10m"

  cadvisor:
    #image: gcr.io/cadvisor/cadvisor
    image: zcube/cadvisor:latest
    container_name: cadvisor
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=30s"
      - "--disable_metrics=accelerator,cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp,memory_numa"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "10m"

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
    volumes:
      - ${DATADIR}/readarr:/config
      - /mnt/qnap-download:/data
    restart: unless-stopped

version: "3"

networks:
  default:
    external:
      name: smarthomeserver

# a couple of services that are generaly useful, remember to set up your .env file first
services:
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DATADIR}/heimdall:/config
    #ports:
    #  - 9080:80
    #  - 9443:443

  # alternative adblocker
  #pihole:
  #  container_name: pihole
  #  image: pihole/pihole:latest
  #  restart: unless-stopped
  #  ports:
  #    - "53:53/tcp"
  #    - "53:53/udp"
  #    - "67:67/udp"
  #    - "6080:80/tcp"
  #    - "6443:443/tcp"
  #  environment:
  #    TZ: ${TZ}
  #    WEBPASSWORD: ${PH_WEBPASSWORD}
  #  volumes:
  #     - '${DATADIR}/pihole/etc-pihole/:/etc/pihole/'
  #     - '${DATADIR}/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
  #  cap_add:
  #    - NET_ADMIN
  #  dns:
  #    - 127.0.0.1
  #    - 46.182.19.48
  #  restart: unless-stopped

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    # - "443:443/tcp"
    # - "853:853/tcp"
    # - "784:784/udp"
    # - "3300:3000/tcp"
    # - "3380:80/tcp"
    volumes:
      - "${DATADIR}/adguard/workdir:/opt/adguardhome/work"
      - "${DATADIR}/adguard/confdir:/opt/adguardhome/conf"
    cap_add:
      - NET_ADMIN
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  # alternative unifi image. One is enough
  #unifi:
  #  image: ryansch/unifi-rpi:latest
  #  container_name: unifi
  #  restart: unless-stopped
  #  network_mode: host # for broadcasting and to avoid having to map all of those ports
  #  # Uncomment the following to set java options
  #  # environment:
  #  #   JAVA_OPTS: -Xmx512M
  #  volumes:
  #    - ${DATADIR}/unifi/config:/var/lib/unifi
  #    - ${DATADIR}/unifi/log:/usr/lib/unifi/logs
  #    - ${DATADIR}/unifi/log2:/var/log/unifi
  #    - ${DATADIR}/unifi/run:/usr/lib/unifi/run
  #    - ${DATADIR}/unifi/run2:/run/unifi
  #    - ${DATADIR}/unifi/work:/usr/lib/unifi/work

  # unifi-controller:
  #   image: ghcr.io/linuxserver/unifi-controller:arm32v7-latest
  #   container_name: unifi-controller
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - MEM_LIMIT=512M #optional
  #   volumes:
  #     - ${DATADIR}/unifi-controller:/config
  #   ports:
  #     - 3478:3478/udp
  #     - 10001:10001/udp
  #     - 8080:8080
  #     - 8443:8443
  #     - 1900:1900/udp
  #     - 8843:8843
  #     - 8880:8880
  #     - 6789:6789
  #     - 5514:5514
  #   labels: # better keep this one up to date manually
  #     - "com.centurylinklabs.watchtower.enable=false"
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: "http://localhost:3100/loki/api/v1/push"
  #       max-size: "200m"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true # deleting old unused images automatically
      # optional for notifications
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD}
      # alternative for notification via pushover
      #- WATCHTOWER_NOTIFICATIONS=shoutrrr
      #- WATCHTOWER_NOTIFICATION_URL=pushover://shoutrrr:${PO_TOKEN}@${PO_USERKEY}
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  loki:
    container_name: loki
    image: grafana/loki:2.3.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ${DATADIR}/loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ${DATADIR}/loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  # can be used as an alternative to the Loki log driver
  # promtail:
  #   container_name: promtail
  #   image: grafana/promtail:2.3.0
  #   restart: unless-stopped
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - ${DATADIR}/promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
  #   command: -config.file=/etc/promtail/promtail-config.yaml

  duplicati:
    image: lscr.io/linuxserver/duplicati:2.0.6
    container_name: duplicati
    restart: unless-stopped
    environment:
      #- PUID=${PUID}
      #- PGID=${PGID}
      - PUID=0
      - PGID=0
      - TZ=${TZ}
      #- CLI_ARGS= #optional
    volumes:
      - ${DATADIR}/duplicati/config>:/config
      - ${DATADIR}:/source
    # ports:
    #   - 8200:8200
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ${DATADIR}/nginx-package-manager/data:/data
      - ${DATADIR}/nginx-package-manager/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s
